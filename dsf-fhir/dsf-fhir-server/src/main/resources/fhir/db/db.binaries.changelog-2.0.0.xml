<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.6.xsd"
				   logicalFilePath="db/db.binaries.changelog-2.0.0.xml">

	<changeSet author="retwet" id="db.binaries.changelog-2.0.0.add-binary_oid-column">
		<sql dbms="postgresql">
			CREATE EXTENSION IF NOT EXISTS lo;
		</sql>

		<addColumn tableName="binaries">
			<column name="binary_oid" type="oid"/>
		</addColumn>

		<sql>
			UPDATE binaries
			SET binary_oid = lo_from_bytea(0, binary_data)
			WHERE binary_data IS NOT NULL;
		</sql>
	</changeSet>

	<!--
	postgres does not support renaming or dropping columns in views, therefore the current_binaries
	and all its dependent views have to be dropped and recreated:
	https://www.postgresql.org/docs/current/sql-createview.html
	-->
	<changeSet author="retwet" id="db.binaries.changelog-2.0.0.drop-current_binaries-and-dependent-views">
		<dropView viewName="all_resources"/>
		<dropView viewName="all_read_access_resources"/>
		<dropView viewName="current_binaries"/>
	</changeSet>

	<changeSet author="retwet" id="db.binaries.changelog-2.0.0.recreate-current_binaries-and-dependent-views">
		<createView viewName="current_binaries" replaceIfExists="true">
			SELECT binary_id, version, binary_json, binary_oid
			FROM (
			SELECT DISTINCT ON (binary_id) binary_id, version, deleted, binary_json, binary_oid
			FROM binaries ORDER BY binary_id, version DESC
			) AS current_b
			WHERE deleted IS NULL
		</createView>
		<sql dbms="postgresql">
			ALTER TABLE current_binaries OWNER TO ${db.liquibase_user};
			GRANT ALL ON TABLE current_binaries TO ${db.liquibase_user};
			GRANT SELECT ON TABLE current_binaries TO ${db.server_users_group};
		</sql>

		<createView viewName="all_resources" replaceIfExists="true">
			SELECT
			id
			, version
			, type
			, resource
			FROM (
			SELECT activity_definition_id AS id, version, 'ActivityDefinition'::text AS type, activity_definition AS resource FROM current_activity_definitions
			UNION
			SELECT binary_id AS id, version, 'Binary'::text AS type, binary_json AS resource FROM current_binaries
			UNION
			SELECT bundle_id AS id, version, 'Bundle'::text AS type, bundle AS resource FROM current_bundles
			UNION
			SELECT code_system_id AS id, version, 'CodeSystem'::text AS type, code_system AS resource FROM current_code_systems
			UNION
			SELECT document_reference_id AS id, version, 'DocumentReference'::text AS type, document_reference AS resource FROM current_document_references
			UNION
			SELECT endpoint_id AS id, version, 'Endpoint'::text AS type, endpoint AS resource FROM current_endpoints
			UNION
			SELECT group_id AS id, version, 'Group'::text AS type, group_json AS resource FROM current_groups
			UNION
			SELECT healthcare_service_id AS id, version, 'HealthcareService'::text AS type, healthcare_service AS resource FROM current_healthcare_services
			UNION
			SELECT library_id AS id, version, 'Library'::text AS type, library AS resource FROM current_libraries
			UNION
			SELECT location_id AS id, version, 'Location'::text AS type, location AS resource FROM current_locations
			UNION
			SELECT measure_report_id AS id, version, 'MeasureReport'::text AS type, measure_report AS resource FROM current_measure_reports
			UNION
			SELECT measure_id AS id, version, 'Measure'::text AS type, measure AS resource FROM current_measures
			UNION
			SELECT naming_system_id AS id, version, 'NamingSystem'::text AS type, naming_system AS resource FROM current_naming_systems
			UNION
			SELECT organization_id AS id, version, 'Organization'::text AS type, organization AS resource FROM current_organizations
			UNION
			SELECT organization_affiliation_id AS id, version, 'OrganizationAffiliation'::text AS type, organization_affiliation AS resource FROM current_organization_affiliations
			UNION
			SELECT patient_id AS id, version, 'Patient'::text AS type, patient AS resource FROM current_patients
			UNION
			SELECT practitioner_role_id AS id, version, 'PractitionerRole'::text AS type, practitioner_role AS resource FROM current_practitioner_roles
			UNION
			SELECT practitioner_id AS id, version, 'Practitioner'::text AS type, practitioner AS resource FROM current_practitioners
			UNION
			SELECT provenance_id AS id, version, 'Provenance'::text AS type, provenance AS resource FROM current_provenances
			UNION
			SELECT questionnaire_id AS id, version, 'Questionnaire'::text AS type, questionnaire AS resource FROM current_questionnaires
			UNION
			SELECT questionnaire_response_id AS id, version, 'QuestionnaireResponse'::text AS type, questionnaire_response AS resource FROM current_questionnaire_responses
			UNION
			SELECT research_study_id AS id, version, 'ResearchStudy'::text AS type, research_study AS resource FROM current_research_studies
			UNION
			SELECT structure_definition_id AS id, version, 'StructureDefinition'::text AS type, structure_definition AS resource FROM current_structure_definitions
			UNION
			SELECT subscription_id AS id, version, 'Subscription'::text AS type, subscription AS resource FROM current_subscriptions
			UNION
			SELECT task_id AS id, version, 'Task'::text AS type, task AS resource FROM current_tasks
			UNION
			SELECT value_set_id AS id, version, 'ValueSet'::text AS type, value_set AS resource FROM current_value_sets
			) AS current_all
		</createView>
		<sql dbms="postgresql">
			ALTER TABLE all_resources OWNER TO ${db.liquibase_user};
			GRANT ALL ON TABLE all_resources TO ${db.liquibase_user};
			GRANT SELECT ON TABLE all_resources TO ${db.server_users_group};
		</sql>

		<createView viewName="all_read_access_resources" replaceIfExists="true">
			SELECT
			id
			, version
			, type
			, resource
			FROM (
			SELECT activity_definition_id AS id, version, 'ActivityDefinition'::text AS type, activity_definition AS resource FROM current_activity_definitions
			UNION
			SELECT binary_id AS id, version, 'Binary'::text AS type, binary_json AS resource FROM current_binaries
			UNION
			SELECT bundle_id AS id, version, 'Bundle'::text AS type, bundle AS resource FROM current_bundles
			UNION
			SELECT code_system_id AS id, version, 'CodeSystem'::text AS type, code_system AS resource FROM current_code_systems
			UNION
			SELECT document_reference_id AS id, version, 'DocumentReference'::text AS type, document_reference AS resource FROM current_document_references
			UNION
			SELECT endpoint_id AS id, version, 'Endpoint'::text AS type, endpoint AS resource FROM current_endpoints
			UNION
			SELECT group_id AS id, version, 'Group'::text AS type, group_json AS resource FROM current_groups
			UNION
			SELECT healthcare_service_id AS id, version, 'HealthcareService'::text AS type, healthcare_service AS resource FROM current_healthcare_services
			UNION
			SELECT library_id AS id, version, 'Library'::text AS type, library AS resource FROM current_libraries
			UNION
			SELECT location_id AS id, version, 'Location'::text AS type, location AS resource FROM current_locations
			UNION
			SELECT measure_report_id AS id, version, 'MeasureReport'::text AS type, measure_report AS resource FROM current_measure_reports
			UNION
			SELECT measure_id AS id, version, 'Measure'::text AS type, measure AS resource FROM current_measures
			UNION
			SELECT naming_system_id AS id, version, 'NamingSystem'::text AS type, naming_system AS resource FROM current_naming_systems
			UNION
			SELECT organization_id AS id, version, 'Organization'::text AS type, organization AS resource FROM current_organizations
			UNION
			SELECT organization_affiliation_id AS id, version, 'OrganizationAffiliation'::text AS type, organization_affiliation AS resource FROM current_organization_affiliations
			UNION
			SELECT patient_id AS id, version, 'Patient'::text AS type, patient AS resource FROM current_patients
			UNION
			SELECT practitioner_role_id AS id, version, 'PractitionerRole'::text AS type, practitioner_role AS resource FROM current_practitioner_roles
			UNION
			SELECT practitioner_id AS id, version, 'Practitioner'::text AS type, practitioner AS resource FROM current_practitioners
			UNION
			SELECT provenance_id AS id, version, 'Provenance'::text AS type, provenance AS resource FROM current_provenances
			UNION
			SELECT questionnaire_id AS id, version, 'Questionnaire'::text AS type, questionnaire AS resource FROM current_questionnaires
			UNION
			SELECT research_study_id AS id, version, 'ResearchStudy'::text AS type, research_study AS resource FROM current_research_studies
			UNION
			SELECT structure_definition_id AS id, version, 'StructureDefinition'::text AS type, structure_definition AS resource FROM current_structure_definitions
			UNION
			SELECT subscription_id AS id, version, 'Subscription'::text AS type, subscription AS resource FROM current_subscriptions
			UNION
			SELECT value_set_id AS id, version, 'ValueSet'::text AS type, value_set AS resource FROM current_value_sets
			) AS current_all_read_access
		</createView>
		<sql dbms="postgresql">
			ALTER TABLE all_read_access_resources OWNER TO ${db.liquibase_user};
			GRANT ALL ON TABLE all_read_access_resources TO ${db.liquibase_user};
			GRANT SELECT ON TABLE all_read_access_resources TO ${db.server_users_group};
		</sql>
	</changeSet>

	<changeSet author="retwet" id="db.binaries.changelog-2.0.0.drop-binary_data-column">
		<dropColumn tableName="binaries" columnName="binary_data"/>
	</changeSet>
</databaseChangeLog>